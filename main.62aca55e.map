{"version":3,"sources":["shapes.ts","hsla.ts","manager.ts","utils.ts","main.ts"],"names":[],"mappings":";;;;;;ACOA,SAAA,iBAAA,CACE,CADF,EAEE,CAFF,EAGE,CAHF,EAIE,CAJF,EAIW;AAET,QAAI,IAAJ;AACA,ACdF,IAAA,IDcM,OCdN,QAAA,EDcuB,KAAK,GCd5B,CAAA,CDcuB,CAAW,CAAX,IAAgB,GAAjC,EAAsC,GAAtC,CAAJ;AACA,ACdF,IAAA,IDcM,KCdN,QAAA,IDcuB,ICdvB,CDc4B,ACd5B,KDcuB,CAAW,CAAX,IAAgB,GAAjC,EAAsC,GAAtC,CAAJ;AACA,ACbF,ACHA,IDGA,IDaM,CEhBN,IAAA,CDGA,ACFE,QADF,EAEE,CFcqB,ECbvB,GDa4B,EEhB5B,EAEgC,CFcT,CAAW,CAAX,ECbvB,EDauC,GAAjC,EAAsC,GAAtC,CAAJ;AAEA,ACZA,ACFA,QFcI,GEdG,EDEP,CDYU,CAAV,EAAa,AEdA,GDEb,CACU,GADV,EAEU,ACJH,CAAgB,IDEvB,EAGU,CCLH,CAAwB,IDE/B,ACFO,CAA6B,CDKZ,OCLjB,EAAuC,QAAvC,CAAP;AFeE,AGnBJ,AFOY,ACFX,ICLD,QHmBU,CCZE,GEPZ,AFOY,GAAA,CDYM,ECZN,EEPZ,CHmBuB,KAAL,CAAW,IGnB7B,CHmBkC,AGnBlC,KHmB6B,CAAW,MAAM,CAAjB,CAAX,CAAd;AACA,AGnBJ,AFOY,ACRZ,ICCA,IDDA,IAAA,CDQY,CEPZ,CHmBW,AEpBX,GDQY,CCRZ,EDQY,CEPZ,IFOY,KEPZ,CAAA;AHoBM,AGhBN,AFIY,IEJN,SFIM,EDYH,ICZG,CDWD,ECXC,MAAA,GEJqB;AHiB3B,AGhBJ,AFFiB,aEER,AFFQ,EDkBV,GGjBwB,EHetB,CChBQ,GAA0C,EAA1C;ADmBb,AGhBJ,AFGI,aEHK,EHgBF,KAHE;AAIL,AGnB2B,AFO/B,CEPF,WFOE,GDYO,MCZP,CAAA,WAAA,GAAA,UAAY,OAAZ,EAA6B,CAA7B,EAAwC,CAAxC,EAAiD;ADQxC,AGVX,AFGI,CEHH,QHUG,GCPM,CEHT,aFGuB,IAAI,IAAJ,GAAW,OAAX,EAApB;ADaD,AGfD,AFGE,KDIF,GGPM,GHeC,CCZC,KEHO,IFGE,KEHO,EFGP,WEHF,CAAuB,KFGrB,CAAkB,EEHpB,CAAf,WFGiD,GAAhC,EAAqC,GAArC,EAA0C,EAA1C,EAA8C,CAA9C,CAAf;ADaA,AGfF,AFGE,AFbJ,IAAM,IIUE,IHeE,ACZA,CFbK,CIUD,EHeA,IAAI,CGfG,EHeP,GAAU,ACZA,KDYK,AGff,CAAkB,GHeC,ACZT,CDYA,AGfV,CHeA,AGfZ,GHeoC,IAAI,CAAJ,CCZd,CAAY,CDYU,IAAI,CAA9C,CCZoB,CAAoB,CAApB,EAAuB,CAAvB,CAApB;ADaA,AGfF,AFGE,AFbF,QIUM,CJVD,EADQ,CC0BL,ACZA,IDYI,EGfI,EHeA,ACZA,CDYJ,CGfQ,EHeA,CAAlB,ICZc,GEHI,MFGJ,CEHA,AFGU,CEHE,GAAZ,EAAiB,AFGjB,CAAiB,KAAK,CEHE,EFGxB,EAA2B,MEH3B,AFGA,EEHoC,AFGD,OEHQ,IFG3C,CAAd,MEHc,CAAhB;AHgBE,AGdF,AFEE,AFbF,SAAK,IIWL,AFEO,EDYE,MCZP,CAAc,CEFhB,GAAA,CFEmB,OAAjB,IAA8B;ADa5B,AGdF,AFEE,AFhBS,CAAf,WIcU,GHcD,KCZK,CAAC,GDYG,CAAC,CGdK,AFEV,CADoB,MEDH,QHcI,CAAhB,CGdf,CHckC,CAAnB,EAAsB,IAAI,IAAI,CAA9B,IAAmC,GAApC,EAAyC,OAAzC,CAAiD,CAAjD,CAAT,EAA8D,EAA9D,CADE;AAEL,AGdF,AFEE,AFZN,IAAA,QIUU,GHcD,CDxBT,QCwBkB,CAAC,EGdM,EFEF,AFZvB,KIUgC,OHcG,ADxBnC,CCwBmB,EAAmB,CAAnB,AGdf,EHcqC,CAAtB,IAA2B,GAA5B,EAAiC,OAAjC,CAAyC,CAAzC,CAAT,EAAsD,EAAtD,CAFE;AAGL,AGdF,AFD8B,AFiBhC,SEjBE,IFiBF,ECFO,AGdE,OJgBT,CACY,CCHI,CAAC,CDEjB,CIhBE,CAAoB,AJkBV,MAFZ,CIhBE,CJmBA,CInB6B,IHcE,CAAhB,EAAmB,CAAnB,EAAsB,ADEvC,EIhB2C,AJmBjB,ECLiB,IAAI,CAA9B,CGdc,EAA7B,CHckD,GAApC,EAAyC,OAAzC,CAAiD,CAAjD,CAAT,EAA8D,EAA9D,CAHE;AAIL,AGdF,AFED,AFcW,KEvBZ,QFuBY,ECFL,AGdE,CJgBG,GAAA,GAAA,KIhBV,CAAoB,QAApB,EAA8B,aAAa,QAAb,EAA9B;AHUO,AGTP,AFGF,AFaY,SCPV,GCNF,CFaY,GIhBF,GJgBE,EEbZ,CAAA,AFaY,MAAA,IIhBV,AFGF,CEH2B,EFG3B,SEHE,CFGS,CEH6B,MFGxC,EAA4B,CAA5B,EAAuC,CEHrC,AFGF,EAAgD;ADY/C,AGdA,AFGO,AFVA,YEUA,CFVA,IEUA,CFVA,GAAQ,CEUR,AFVA,QEUA,CAAA,KAAA,OAAA,CAAA;ADYR,AGdA,AFEQ,AFeN,WCHK,AGdA,CFEG,CFeH,CAAL,CCHF,EDGW,IEfD,GAAA,GEFV,CAAwB,CJiBD,CEff,AFeN,MIjBF,EAAkC,UAAlC,EAA8C,wBAA9C;AHeD,AGdC,AFCQ,AFgBN,YEhBgB,CFgBX,CAAL,GAAS,YAAY,CEhBL,AFgBhB,GEhBgB,eAAV;ADjBV,AGkBE,AFAE,AFgBA,QClCJ,GGkBS,CFAD,CAAC,AFgBA,MEhBL,AFgBA,EEhBa,CFgBC,GClClB,EGkBE,CHlBF,AGmBI,MJe0B,MIhB5B,AJgBE,EIdA,GHpBJ,OGoBK,KAAD,EAAkB;AHYtB,AGXM,AFFA,AFgBF,SCHJ,IDGS,KAAL,GAAa,ICHjB,CAA0B,MAA1B,CDG6B,CCHa,IDGtC,CCHJ,EAAuD;AACrD,AGXI,AFFD,AFgBF,WCHM,KGXH,IHWY,AGXZ,CAAK,IHWT,EGXe,cAAX,EAA2B,UAAA,KAAA,EAAK;AHYrC,AGXO,AFDJ,AFbK,YEaC,EFbD,MIcO,AJdP,GAAP,GEasB,KEChB,CAAoB,CJbxB,EEYoB,CFbtB,EIcgC,AJZ9B,MAFF,EEasB,AFVpB,CEUgC,CEC5B,EAAsC,MAAM,CJdlD,EEasB,AFVI,CEUqB,CECzC,AFDgB,EECmC,AFDP,CAA5B,EAA+B,GECU,KAAzD,OFDgB,CAApB;ADcJ,AGZO,AFDH,AFTA,ICsBA,KGdE,GFCI,AFTF,KAAJ,GESc,EDaI,GCbC,MDanB,ACbc,EAAa,KAAb,CAAmB,ODaf,CAAS,CAAT,EAAoB,ACbxB,CDaI,ACblB,EDaiD,CAA/B,EAAwC;AAC5D,AGZG,AFDD,AFTA,KIGF,EAQE,CHWE,IAAI,ADtBF,CCsBN,EAAW,ACbF,IAAP,CAAY,AFTZ,KESA,MENF;AHoBE,AGVF,AFHE,AFTA,WIYK,CJZC,CCsBD,ACbA,CDaL,OCbA,CAAc,IFTM,CIYtB,AFHmB,CEIjB,CJbA,CAJwB,CAIC,GESzB,EAA4B,GEG9B,EAEE,UAAC,AFLD,GAA8C,EEK9C,EAAkB,OFLlB;ADcD,AGRG,AFLH,AFTC,KEDF,OFCM,cAAc,GAAlB,EAAuB;ACuBzB,AGRI,AFJJ,AFVI,QCsBA,IAAI,ACZR,CDYA,EAAW,CGRP,IAAA,AJdQ,CIcH,AFJT,CAAA,KEIe,AJdX,WEUJ,GEII,AFJJ,EEI+B,QFJd,EEIc,GFJ/B,EEI+B,AFJC,EEII,IFJpC,EAA8C;ADa5C,AGRI,AFJJ,AFVE,aCsBG,ACZA,CDYL,ICZA,EEIY,CFJC,EFVA,GEUb,CFViB,GIcb,CAAmB,CJdD,KIcO,AJdZ,CAAW,KAAK,IIc7B,EAAqC,AJdb,KAAgB,CIcG,AJd9B,CAAf,IIcE,EAAkD,MAAM,KAAxD;AHSL,AGRI,AFJH,AFVC,SIYC,AJfF,IEaK,EFVE,IEUP,GAAc,MAAd;ADaF,AGRG,AFJF,AFVG,KIOJ,AFAA,EEQE,CHOE,IAAI,IAAI,CAAZ,EAAe,CDtBH,QAAR,GIOJ;AHgBE,AGLF,AFNA,AFXI,QIiBA,IFNJ,GDWS,IAAI,CAAC,CCXd,CEMkB,AFNlB,CFXe,CCsBG,CAAL,EGLb,AJjBmB,ECsBI,ACXvB,CDWa,ECXb,AFXwB,CCsBG,CAAzB,GDtBiB,CAAW,KAAK,CEWnC,KFX8B,KAAgB,CAA3B,CAAf;ACuBH,AGLD,AFNE,AFXC,WIiBI,EFNA,GAAL,CAAS,SAAT,CEMF,AFNqB,CEOnB,AFPA,EAAsB,CAAtB,EAAyB,KAAK,CEMhC,EAEE,EFRA,EAAqC,KAAK,CEQ1C,KAAA,AFRA,EEQK;AHIP,AGHI,AJnBF,QCsBE,IAAI,GDtBC,CCsBG,CAAZ,EAAe,ADtBF,GImBK,EJnBT,CAAU,CImBf,EJnBK,EAAe,MAAf,EAAuB,CEWnB,IAAE,MFXN,EAAoC,QAApC,CAAP;ACuBA,AGHE,AFRQ,AFXX,KAhBM,UCsCE,CAAP,AGHU,AFRA,SAAA,EEQR,CAAoB,CAAC,CAArB,EAAwB,AFRhB,MEQsB,EFRtB,CAAA,EEQR,AFRQ,EEQ6B,AFR7B,MEQmC,AFRnC,KEQR;AHIH,AGHE,AFRC,AFCJ,KIEA,EAME,IJRF,KEDU,SFCV,CAAI,KIEJ,CFHuC,EAAnC,EFCA,SAAJ,EAAI,WAAJ,EAAa;ACWb,AGDA,AFVI,QDWA,GGDG,CHCC,CDXR,GCWY,CAAZ,EAAe,ACXJ,OAAP,CEUJ,AFVmB,CEWjB,AJXF,SEAmB,EEUnB,EAEE,CFZiB,EAAK,OEYtB,KAAA,EAAK;AHAL,AGCE,AFZE,AFAJ,YIYM,GHDC,IAAI,ADXJ,CCWK,ECXF,CEYR,CHDc,ADXJ,CCWD,AGCQ,CFZf,GFAG,CCWe,EDXF,ECWM,CAAJ,CDXtB,ECW8B,CAAnB,IAAwB,CAAnC;AACD,AGCK,AFZA,AFAL,SAFY,WIcC,AFZJ,MAAM,IEYV,CAAmB,CAAC,CAApB,EAAuB,AFZvB,EAAqB,IEYQ,KAA7B,EAAoC,MAAM,KAA1C;AHAN,AGCK,AFZG,WDWD,CAAP,YDda,UEGS,IAAd,CAAmB,KAAnB;ADYT,AGCI,AFZI,CDNT,IGYE,EAOE,wBAPF;AAUA,AFfK,AFLQ,KAAb,MIoBO,EFpBH,cEoBJ,CACE,SADF,EAEE,YAAA;AAAM,AFhBJ,AFFJ,cAAA,CIkBS,IFhBA,IFFT,CAAA,GEEI,CAAc,CEgBK,AJlBvB,CEEI,EAAkB,AFFtB,EIkBQ,IFhBJ,GAA2B,CFFzB,WAAN,CEEI,CFF0B;AIkBD,AFf1B,AFFD,KIeF,EAGE,QJlBO,IAAI,KAAK,KAAT,CAAe,CIexB,IJf6B,GAApB,EAAyB,KAAK,MAA9B,EAAsC,WAAtC,EAAmD,KAAK,QAAxD,CAAP;AIqBF,AJpBC,KAFD,MIsBO,gBAAP,CACE,YADF,EAEE,YAAA;AAAM,AF/BN,AFWF,aEXO,CFWP,CIoBS,EF/BI,EAAX,IAAiB,AFWnB,CAAA,IEXwB,AFWxB,CIoBuB,EJpBvB,GIoBQ,EF/BN,EAA8B,KFWhC;AIoB6B,AJnB3B,KIiBF,EAGE,MJpBK,GAAL,CAAS,GEZE,MFYX,KIiBF;AAMA,AFzBG,AFGD,aIsBF,AJtBO,IIsBP,GA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","file":"main.62aca55e.map","sourcesContent":["import { RGBAColour } from './hsla';\n\nconst RADIUS = {\n  MIN: 10,\n  MAX: 100,\n};\n\nexport abstract class PolyShape {\n  protected readonly x: number;\n  protected readonly y: number;\n  protected readonly radius: number;\n  protected readonly angle: number;\n  protected abstract vertices: number;\n  protected abstract klass: typeof Polygon | typeof Polystar;\n  private alpha = 1;\n\n  static random(\n    ctx: CanvasRenderingContext2D,\n    colour: RGBAColour,\n    coordinates: Coordinates,\n  ): Polygon | Polystar {\n    let shape: typeof Polygon | typeof Polystar;\n    let vertices: number;\n    const styleChoice = 0.1; //Math.random();\n    if (styleChoice < 0.5) {\n      shape = Polygon;\n      vertices = 3 + Math.round(Math.random() * 6);\n    } else {\n      shape = Polystar;\n      vertices = 4 + Math.round(Math.random() * 7);\n    }\n    return new shape(ctx, colour, coordinates, vertices);\n  }\n\n  constructor(\n    protected ctx: CanvasRenderingContext2D,\n    protected colour: RGBAColour,\n    coordinates: Coordinates,\n  ) {\n    this.x = coordinates.x;\n    this.y = coordinates.y;\n    this.radius = coordinates.radius;\n    this.angle = coordinates.angle;\n  }\n\n  get isVisible(): boolean {\n    return this.alpha > 0.01;\n  }\n\n  clone(coordinates: Coordinates): Polygon | Polystar {\n    return new this.klass(this.ctx, this.colour, coordinates, this.vertices);\n  }\n\n  draw(): void {\n    this.ctx.beginPath();\n    this.drawVertices();\n    this.ctx.fillStyle = this.fillStyle;\n    this.ctx.fill();\n\n    this.ctx.beginPath();\n    this.setStrokeStyles();\n    this.drawVertices();\n    this.ctx.closePath();\n    this.ctx.stroke();\n\n    this.fade();\n  }\n\n  private get fillStyle(): string {\n    const alpha = this.colour.a * this.alpha;\n    return `rgba(${this.colour.r}, ${this.colour.g}, ${\n      this.colour.b\n    } , ${alpha})`;\n  }\n\n  get isFadedOut(): boolean {\n    return this.alpha < 0.01;\n  }\n\n  private fade() {\n    this.alpha = this.alpha *= 0.85;\n  }\n\n  protected abstract drawVertices(): void;\n\n  private setStrokeStyles() {\n    this.ctx.strokeStyle = `rgba(255, 255, 255, ${this.alpha})`;\n    this.ctx.lineWidth = 3;\n    this.ctx.lineCap = 'round';\n  }\n}\n\nclass Polygon extends PolyShape {\n  protected readonly klass = Polygon;\n\n  constructor(\n    ctx: CanvasRenderingContext2D,\n    colour: RGBAColour,\n    coordinates: Coordinates,\n    protected vertices: number,\n  ) {\n    super(ctx, colour, coordinates);\n  }\n\n  protected drawVertices() {\n    var x, y, angle;\n    for (let i = 0; i < this.vertices; i += 1) {\n      angle = this.angle + 2 * Math.PI * i / this.vertices;\n      x = this.x + this.radius * Math.cos(angle);\n      y = this.y + this.radius * Math.sin(angle);\n\n      if (i === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n    }\n  }\n}\n\nclass Polystar extends PolyShape {\n  protected readonly klass = Polystar;\n  protected readonly vertices: number;\n\n  constructor(\n    ctx: CanvasRenderingContext2D,\n    colour: RGBAColour,\n    coordinates: Coordinates,\n    vertices: number,\n  ) {\n    super(ctx, colour, coordinates);\n    this.vertices = vertices * 2;\n  }\n\n  protected drawVertices(): void {\n    let x: number;\n    let y: number;\n    let radius: number;\n    let angle: number;\n    for (let i = 0; i < this.vertices; i += 1) {\n      angle = this.angle + 2 * Math.PI * i / this.vertices;\n      if (i % 2) {\n        radius = 0.6 * this.radius;\n      } else {\n        radius = this.radius;\n      }\n\n      x = this.x + radius * Math.cos(angle);\n      y = this.y + radius * Math.sin(angle);\n\n      if (i === 0) {\n        this.ctx.moveTo(x, y);\n      } else {\n        this.ctx.lineTo(x, y);\n      }\n    }\n  }\n}\n\nexport class Coordinates {\n  static initial(x: number, y: number): Coordinates {\n    return new Coordinates(x, y, RADIUS.MIN, 0);\n  }\n\n  static fromPrevious(\n    x: number,\n    y: number,\n    previous: Coordinates,\n  ): Coordinates {\n    const deltaX = previous.x - x;\n    const deltaY = previous.y - y;\n    const deltaR = Math.sqrt(deltaX * deltaX + deltaY * deltaY);\n\n    const radius = Math.min(Math.max(deltaR, RADIUS.MIN), RADIUS.MAX);\n    const angle = Math.atan(deltaX / deltaY);\n    return new Coordinates(x, y, radius, angle);\n  }\n\n  constructor(\n    public x: number,\n    public y: number,\n    public radius: number,\n    public angle: number,\n  ) {}\n}\n","export interface RGBAColour {\n  r: number;\n  g: number;\n  b: number;\n  a: number;\n}\n\nexport function convertHSLAToRGBA(\n  h: number,\n  s: number,\n  l: number,\n  a: number,\n): RGBAColour {\n  let rgba: RGBAColour;\n  h = convertToPercent(Math.round(h) % 360, 360);\n  s = convertToPercent(Math.round(s) % 101, 100);\n  l = convertToPercent(Math.round(l) % 101, 100);\n\n  if (s === 0) {\n    const value = Math.round(Math.round(255 * l));\n    rgba = {\n      r: value,\n      g: value,\n      b: value,\n      a: a,\n    };\n  } else {\n    const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n    const p = 2 * l - q;\n    rgba = {\n      r: parseInt((convertHueToRGB(p, q, h + 1 / 3) * 256).toFixed(0), 10),\n      g: parseInt((convertHueToRGB(p, q, h) * 256).toFixed(0), 10),\n      b: parseInt((convertHueToRGB(p, q, h - 1 / 3) * 256).toFixed(0), 10),\n      a: a,\n    };\n  }\n  return rgba;\n}\n\nfunction convertToPercent(amount: number, limit: number): number {\n  return amount / limit;\n}\n\nvar convertHueToRGB = function(p: number, q: number, t: number): number {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n};\n","import { PolyShape, Coordinates } from './shapes';\nimport { convertHSLAToRGBA, RGBAColour } from './hsla';\n\nexport class Manager {\n  private readonly dataById: { [id: string]: ManagedItem } = {};\n\n  constructor(\n    private ctx: CanvasRenderingContext2D,\n    private width: number,\n    private height: number,\n  ) {}\n\n  addNewShape(shapeId: number, x: number, y: number): void {\n    const currentTime = new Date().getTime();\n    const colour = convertHSLAToRGBA(currentTime % 360, 100, 50, 1);\n    const coordinates = Coordinates.initial(x, y);\n    const shape = PolyShape.random(this.ctx, colour, coordinates);\n    this.dataById[`${shapeId}`] = {\n      shapes: [shape],\n      lastCoordinates: coordinates,\n    };\n  }\n\n  cloneShape(shapeId: number, x: number, y: number): void {\n    const { shapes, lastCoordinates } = this.dataById[`${shapeId}`];\n    if (!shapes) {\n      return;\n    }\n\n    const coordinates = Coordinates.fromPrevious(x, y, lastCoordinates);\n    const shape = last(shapes).clone(coordinates);\n    shapes.push(shape);\n    this.dataById[`${shapeId}`].lastCoordinates = coordinates;\n  }\n\n  updateScreenSize(width: number, height: number): void {\n    this.width = width;\n    this.height = height;\n  }\n\n  drawAll(): void {\n    this.ctx.clearRect(0, 0, this.width, this.height);\n    for (const id in this.dataById) {\n      const { shapes } = this.dataById[id];\n      const visibleShapes: PolyShape[] = [];\n      shapes.forEach(shape => {\n        shape.draw();\n        if (shape.isVisible) {\n          visibleShapes.push(shape);\n        }\n      });\n      this.dataById[id].shapes = visibleShapes;\n    }\n  }\n}\n\nexport interface ManagedItem {\n  shapes: PolyShape[];\n  lastCoordinates: Coordinates;\n}\n\nfunction last<T>(array: T[]): T {\n  return array[array.length - 1];\n}\n","export function iter<T>(\n  iterable: ArrayLike<T>,\n  callback: (element: T) => void,\n) {\n  return Array.prototype.forEach.call(iterable, callback);\n}\n","import { Manager } from './manager';\nimport { iter } from './utils';\nimport { PolyShape } from './shapes';\nimport { convertHSLAToRGBA, RGBAColour } from './hsla';\n\nconst PASSIVE_NO_CAPTURE_FLAGS = {\n  capture: false,\n  passive: true,\n};\n\n(function() {\n  const canvas = document.querySelector('canvas') as HTMLCanvasElement;\n  const ctx = canvas.getContext('2d') as CanvasRenderingContext2D;\n  const manager = new Manager(ctx, window.innerWidth, window.innerHeight);\n\n  function sizeCanvas() {\n    const windowWidth = window.innerWidth;\n    const windowHeight = window.innerHeight;\n    canvas.setAttribute('width', windowWidth.toString());\n    canvas.setAttribute('height', windowHeight.toString());\n    manager.updateScreenSize(windowWidth, windowHeight);\n  }\n  window.addEventListener('resize', sizeCanvas, PASSIVE_NO_CAPTURE_FLAGS);\n  sizeCanvas();\n\n  canvas.addEventListener(\n    'touchstart',\n    (event: TouchEvent) => {\n      // event.preventDefault();\n      iter(event.changedTouches, touch => {\n        manager.addNewShape(touch.identifier, touch.pageX, touch.pageY);\n      });\n    },\n    PASSIVE_NO_CAPTURE_FLAGS,\n  );\n  canvas.addEventListener(\n    'touchmove',\n    (event: TouchEvent) => {\n      // event.preventDefault();\n      iter(event.changedTouches, touch => {\n        manager.cloneShape(touch.identifier, touch.pageX, touch.pageY);\n      });\n    },\n    PASSIVE_NO_CAPTURE_FLAGS,\n  );\n\n  let isMouseDown = false;\n  canvas.addEventListener(\n    'mousedown',\n    event => {\n      isMouseDown = true;\n      manager.addNewShape(-1, event.pageX, event.pageY);\n    },\n    PASSIVE_NO_CAPTURE_FLAGS,\n  );\n  canvas.addEventListener(\n    'mousemove',\n    event => {\n      if (isMouseDown) {\n        manager.cloneShape(-1, event.pageX, event.pageY);\n      }\n    },\n    PASSIVE_NO_CAPTURE_FLAGS,\n  );\n\n  canvas.addEventListener(\n    'mouseup',\n    () => (isMouseDown = false),\n    PASSIVE_NO_CAPTURE_FLAGS,\n  );\n\n  canvas.addEventListener(\n    'mouseleave',\n    () => (isMouseDown = false),\n    PASSIVE_NO_CAPTURE_FLAGS,\n  );\n\n  function tick() {\n    requestAnimationFrame(() => {\n      tick();\n      manager.drawAll();\n    });\n  }\n  tick();\n})();\n"]}